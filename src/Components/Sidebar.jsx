import React, { useEffect, useState, lazy, Suspense } from "react";
import { useContext } from "react";
import { BarContext } from "../Context/BarContext";
import logo from "../assets/logo.png";
import { Link } from "react-scroll";
import { useNavigate } from "react-router-dom";
import { useSelector } from "react-redux";
import { LoginContext } from "../Context/LoginContext";
import { RegisterContext } from "../Context/RegisterContext";
import { ThemeContext } from "../Context/ThemeContext";

const Login = lazy(() => import("./Login"));
const Register = lazy(() => import("./Register"));
import Loader from './Loader';

function Sidebar() {
  const {
    settingsToggle,
    setSettingsToggle,
    handle_settings,
    savedImage,
    setSavedImage,
  } = useContext(BarContext);

  const navigate = useNavigate();
  const cart_items = useSelector((state) => state.cart.items);

  // handle sidebar toggler
  const handle_sidebar = () => {
    document.getElementById("nav").classList.toggle("expanded");
  };
  // handle search toggler
  const [searchToggle, setSearchToggle] = useState(false);
  const [keyword, setKeyword] = useState("");
  const handle_searchToggle = () => {
    setSearchToggle(true);
  };
  const search_keydown = (e) => {
    if (e.key === "Enter") {
      setSearchToggle(false);
      navigate(`/search/${keyword}`, { state: { keyword } });
    }
  };

  // handle login
  const { login, setLogin, handle_login } = useContext(LoginContext);
  // handle register
  const { register, setRegister, handle_register } =
    useContext(RegisterContext);
  // theme icon
  const { theme,handle_theme } = useContext(ThemeContext);
  return (
    <div className="relative">
      {/* Search Toggler ************ */}
      {searchToggle && (
        <div
          onClick={() => setSearchToggle(false)}
          className="bg-[rgb(119,119,119,.5)] fixed top-0 bottom-0 right-0 left-0 w-full z-50 flex items-center justify-center"
        >
          <div
            onClick={(e) => e.stopPropagation()}
            className=" bg-[rgb(255,255,255,.4)] w-[70%] p-6 rounded-lg drop-shadow-2xl backdrop-blur-sm mx-auto"
          >
            <input
              onChange={(e) => setKeyword(e.target.value)}
              onKeyDown={search_keydown}
              className="sidebar-search p-3 w-full pl-6 outline-amber-100 bg-white rounded-full "
              placeholder="Search..."
              type="text"
            />
          </div>
        </div>
      )}
      {/* Setttings Menu Toggler */}
      {settingsToggle && (
        <div
          onClick={() => setSettingsToggle(false)}
          className=" bg-[rgb(119,119,119,.5)] fixed top-0 bottom-0 right-0 left-0 w-full z-50 flex items-center justify-center "
        >
          <div
            onClick={(e) => e.stopPropagation()}
            className="settings-menu  w-50 p-4  rounded-lg drop-shadow-2xl backdrop-blur-sm mx-auto flex flex-col gap-4"
          >
            <button
              onClick={() => handle_register()}
              className="w-full p-2 flex items-center justify-center"
            >
              Register
            </button>
            <button
              onClick={handle_login}
              className="w-full p-2 flex items-center justify-center"
            >
              Login
            </button>
          </div>
        </div>
      )}

      <nav
        id="nav"
        className=" sidebar fixed smscreens flex-col items-center justify-center px-1 rounded-lg overflow-hidden top-10 z-40"
      >
        {/* Sidebar Logo ******** */}
        <span className="mx-auto my-5">
          <img className="w-5" src={logo} alt="Store logo" />
        </span>
        {/* Sidebar Toggler Button */}
        <button
          onClick={() => handle_sidebar()}
          className="sm:mt-15  py-2 text-xl"
        >
<svg fill="currentColor" width="20px" height="20px" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg">
  <path d="M117.65723,170.34277a8.00122,8.00122,0,0,1,0,11.31446l-32,32c-.03809.03759-.07959.06933-.11817.10644-.15088.145-.30371.28809-.46582.4209-.103.08447-.21094.15869-.31738.2373-.103.07667-.2041.15723-.311.229-.12109.08105-.24658.15137-.37109.2251-.1001.05957-.19727.12256-.30029.17773-.124.06641-.25147.12256-.37842.18213-.11035.05176-.21875.10693-.332.1543-.12158.05029-.2461.09082-.37012.13525-.12256.044-.24365.09082-.36865.12891-.12354.03759-.249.06494-.374.09619-.12842.03222-.25538.06836-.38624.09424-.14209.02832-.28564.04492-.42871.06543-.11572.0166-.229.03857-.3457.0498-.26221.02588-.52588.04-.78955.04s-.52734-.01416-.78955-.04c-.1167-.01123-.23-.0332-.3457-.0498-.14307-.02051-.28663-.03711-.42871-.06543-.13086-.02588-.25782-.062-.38624-.09424-.125-.03125-.25048-.0586-.374-.09619-.125-.03809-.24609-.085-.36865-.12891-.124-.04443-.24854-.085-.37012-.13525-.11328-.04737-.22168-.10254-.332-.1543-.12695-.05957-.25439-.11572-.37842-.18213-.103-.05517-.20019-.11816-.30029-.17773-.12451-.07373-.25-.144-.37109-.2251-.10694-.07178-.208-.15234-.311-.229-.10644-.07861-.21435-.15283-.31738-.2373-.16211-.13281-.31494-.27588-.46582-.4209-.03858-.03711-.08008-.06885-.11817-.10644l-32-32a8.00053,8.00053,0,0,1,11.31446-11.31446L72,188.686V48a8,8,0,0,1,16,0V188.686l18.34277-18.34327A8.00122,8.00122,0,0,1,117.65723,170.34277Zm96-96-32-32c-.03516-.03466-.07325-.064-.10889-.09814-.15381-.148-.31006-.29346-.4751-.4292-.10254-.084-.21-.15772-.31543-.23584-.10449-.07764-.20556-.1582-.31347-.23047-.12012-.08057-.24414-.1499-.36719-.22314-.10156-.06006-.2002-.124-.3042-.17969-.12256-.06592-.24854-.12158-.374-.18018-.11182-.05273-.22217-.10888-.33692-.15625-.12012-.0498-.24267-.08984-.36474-.1333-.124-.04492-.24707-.09277-.374-.13135-.12207-.03662-.2456-.064-.36914-.09472-.12988-.03272-.2583-.06934-.39062-.09522-.14063-.02832-.28321-.04492-.4253-.06494-.11621-.0166-.231-.03906-.34863-.05029a8.04864,8.04864,0,0,0-1.5791,0c-.11768.01123-.23242.03369-.34863.05029-.14209.02-.28467.03662-.4253.06494-.13232.02588-.26074.0625-.39062.09522-.12354.03076-.24707.0581-.36914.09472-.127.03858-.25.08643-.374.13135-.12207.04346-.24462.0835-.36474.1333-.11475.04737-.2251.10352-.33692.15625-.12548.0586-.25146.11426-.374.18018-.104.05566-.20264.11963-.3042.17969-.12305.07324-.24707.14257-.36719.22314-.10791.07227-.209.15283-.31347.23047-.10547.07812-.21289.15186-.31543.23584-.165.13574-.32129.28125-.4751.4292-.03564.03418-.07373.06348-.10889.09814l-32,32a8.00053,8.00053,0,0,0,11.31446,11.31446L168,67.314V208a8,8,0,0,0,16,0V67.314l18.34277,18.34327a8.00053,8.00053,0,0,0,11.31446-11.31446Z"/>
</svg>
        </button>
        {/* All Links Container */}
        <div className="links-container h-full   flex flex-col my-5 sm:my-10 items-center justify-between ">
          {/* Home - Search - Cart - Favs */}
          <div className="flex flex-col items-start justify-start gap-2  ">
            {/* Home ************* */}
            <Link to="section1" smooth={true} duration={500}>
              <button
                onClick={() => navigate("/")}
                className=" flex  items-center justify-center"
              >
                <span className="py-2 text-xl">
                <svg width="20px" height="20px" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M56.87 25.981L50.27 21.031L47.27 18.781L35.57 10.001C34.4423 9.16327 33.0748 8.71094 31.67 8.71094C30.2652 8.71094 28.8977 9.16327 27.77 10.001L21.67 14.581V14.371C21.6684 13.8411 21.4572 13.3333 21.0825 12.9586C20.7077 12.5838 20.1999 12.3726 19.67 12.371H12.47C11.9396 12.371 11.4309 12.5817 11.0558 12.9568C10.6807 13.3319 10.47 13.8406 10.47 14.371V23.161L6.44002 26.291C6.23227 26.4524 6.05838 26.6531 5.92833 26.8817C5.79827 27.1103 5.71459 27.3624 5.68208 27.6234C5.64957 27.8844 5.66888 28.1493 5.73887 28.4028C5.80887 28.6564 5.92819 28.8936 6.09001 29.101C6.276 29.3427 6.51546 29.538 6.7896 29.6716C7.06373 29.8052 7.36505 29.8734 7.67 29.871C8.11211 29.8709 8.54152 29.7231 8.89 29.451L10.47 28.231V48.281C10.4716 50.0044 11.1569 51.6568 12.3756 52.8755C13.5942 54.0941 15.2466 54.7794 16.97 54.781H25.6C25.9594 54.7808 26.3121 54.6831 26.6203 54.4981C26.9285 54.3132 27.1807 54.0481 27.35 53.731C27.5142 53.4413 27.6003 53.114 27.6 52.781C27.6017 52.7109 27.5983 52.6407 27.59 52.571V46.851C27.5916 45.7703 28.0223 44.7345 28.7874 43.9713C29.5525 43.2081 30.5893 42.7799 31.67 42.781C32.7491 42.7821 33.7837 43.2112 34.5468 43.9742C35.3098 44.7373 35.7389 45.7719 35.74 46.851V52.781C35.7397 53.114 35.8259 53.4413 35.99 53.731C36.1624 54.0477 36.4167 54.3122 36.7263 54.4969C37.0359 54.6816 37.3895 54.7797 37.75 54.781H46.37C48.0929 54.7776 49.7442 54.0917 50.9624 52.8734C52.1807 51.6552 52.8666 50.0039 52.87 48.281V27.981L54.47 29.181C54.8129 29.4398 55.2305 29.5801 55.66 29.581C55.9718 29.5802 56.2792 29.5076 56.5584 29.3689C56.8376 29.2301 57.081 29.029 57.27 28.781C57.5883 28.3567 57.7249 27.8233 57.6499 27.2982C57.5749 26.7731 57.2944 26.2993 56.87 25.981Z" fill="currentColor"/>
</svg>
                </span>

              </button>
            </Link>
            {/* Search ************* */}
            <button
              onClick={() => handle_searchToggle()}
              className=" flex  items-center justify-center"
            >
              <span className="py-2 text-xl">
              <svg width="18px" height="18px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M16.6725 16.6412L21 21M19 11C19 15.4183 15.4183 19 11 19C6.58172 19 3 15.4183 3 11C3 6.58172 6.58172 3 11 3C15.4183 3 19 6.58172 19 11Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>
              </span>
            </button>
            {/* Cart ************* */}
            <button
              onClick={() => navigate("/cart-items")}
              className=" flex  items-center justify-center"
            >
              <span className="py-2 text-xl relative">
              <svg width="20px" height="20px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M2.23737 2.28845C1.84442 2.15746 1.41968 2.36983 1.28869 2.76279C1.15771 3.15575 1.37008 3.58049 1.76303 3.71147L2.02794 3.79978C2.70435 4.02524 3.15155 4.17551 3.481 4.32877C3.79296 4.47389 3.92784 4.59069 4.01426 4.71059C4.10068 4.83049 4.16883 4.99538 4.20785 5.33722C4.24907 5.69823 4.2502 6.17 4.2502 6.883L4.2502 9.55484C4.25018 10.9224 4.25017 12.0247 4.36673 12.8917C4.48774 13.7918 4.74664 14.5497 5.34855 15.1516C5.95047 15.7535 6.70834 16.0124 7.60845 16.1334C8.47542 16.25 9.57773 16.25 10.9453 16.25H18.0002C18.4144 16.25 18.7502 15.9142 18.7502 15.5C18.7502 15.0857 18.4144 14.75 18.0002 14.75H11.0002C9.56479 14.75 8.56367 14.7484 7.80832 14.6468C7.07455 14.5482 6.68598 14.3677 6.40921 14.091C6.17403 13.8558 6.00839 13.5398 5.9034 13H16.0222C16.9817 13 17.4614 13 17.8371 12.7522C18.2128 12.5045 18.4017 12.0636 18.7797 11.1817L19.2082 10.1817C20.0177 8.2929 20.4225 7.34849 19.9779 6.67422C19.5333 5.99996 18.5058 5.99996 16.4508 5.99996H5.74526C5.73936 5.69227 5.72644 5.41467 5.69817 5.16708C5.64282 4.68226 5.52222 4.2374 5.23112 3.83352C4.94002 3.42965 4.55613 3.17456 4.1137 2.96873C3.69746 2.7751 3.16814 2.59868 2.54176 2.38991L2.23737 2.28845Z" fill="currentColor"/>
<path d="M7.5 18C8.32843 18 9 18.6716 9 19.5C9 20.3284 8.32843 21 7.5 21C6.67157 21 6 20.3284 6 19.5C6 18.6716 6.67157 18 7.5 18Z" fill="currentColor"/>
<path d="M16.5 18.0001C17.3284 18.0001 18 18.6716 18 19.5001C18 20.3285 17.3284 21.0001 16.5 21.0001C15.6716 21.0001 15 20.3285 15 19.5001C15 18.6716 15.6716 18.0001 16.5 18.0001Z" fill="currentColor"/>
</svg>
                {cart_items.length >= 1 ? (
                  <span className="bg-amber-400 text-black flex w-4 h-4  text-sm items-center justify-center  rounded-full absolute -top-[2px] right-0">
                    {cart_items.length}
                  </span>
                ) : (
                  <span></span>
                )}
              </span>
            </button>
            {/* Favorites ************* */}
            <button
              onClick={() => navigate("/favorites")}
              className=" flex  items-center justify-center"
            >
              <span className="py-2 text-xl">
              <svg width="19px" height="19px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M2 9.1371C2 14 6.01943 16.5914 8.96173 18.9109C10 19.7294 11 20.5 12 20.5C13 20.5 14 19.7294 15.0383 18.9109C17.9806 16.5914 22 14 22 9.1371C22 4.27416 16.4998 0.825464 12 5.50063C7.50016 0.825464 2 4.27416 2 9.1371Z" fill="currentColor"/>
</svg>
       
              </span>
            </button>
          </div>
          {/*Theme Icon - Settings - Account */}
          <div className="flex flex-col gap-2 items-center justify-center">
            {/* Theme Icon */}
            <button
            onClick={handle_theme}
            className=" py-2 flex items-center justify-center">
              {theme ? (
                <span className="sidebar-moon">
                  <svg width="18px" height="18px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="24" height="24" fill="none"/>
<path fillRule="evenodd" clipRule="evenodd" d="M8.23129 2.24048C9.24338 1.78695 10.1202 2.81145 9.80357 3.70098C8.72924 6.71928 9.38932 10.1474 11.6193 12.3765C13.8606 14.617 17.3114 15.2755 20.3395 14.1819C21.2206 13.8637 22.2173 14.7319 21.7817 15.7199C21.7688 15.7491 21.7558 15.7782 21.7427 15.8074C20.9674 17.5266 19.7272 19.1434 18.1227 20.2274C16.4125 21.3828 14.3957 22.0001 12.3316 22.0001H12.3306C9.93035 21.9975 7.6057 21.1603 5.75517 19.6321C3.90463 18.1039 2.64345 15.9797 2.18793 13.6237C1.73241 11.2677 2.11094 8.82672 3.2586 6.71917C4.34658 4.72121 6.17608 3.16858 8.20153 2.25386L8.23129 2.24048Z" fill="currentColor"/>
</svg>
                </span>
              ) : (
                <span className="sidebar-sun ">
                  <svg width="18px" height="18px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fillRule="evenodd" clipRule="evenodd" d="M12 1.25C12.4142 1.25 12.75 1.58579 12.75 2V4C12.75 4.41421 12.4142 4.75 12 4.75C11.5858 4.75 11.25 4.41421 11.25 4V2C11.25 1.58579 11.5858 1.25 12 1.25ZM3.66865 3.71609C3.94815 3.41039 4.42255 3.38915 4.72825 3.66865L6.95026 5.70024C7.25596 5.97974 7.2772 6.45413 6.9977 6.75983C6.7182 7.06553 6.2438 7.08677 5.9381 6.80727L3.71609 4.77569C3.41039 4.49619 3.38915 4.02179 3.66865 3.71609ZM20.3314 3.71609C20.6109 4.02179 20.5896 4.49619 20.2839 4.77569L18.0619 6.80727C17.7562 7.08677 17.2818 7.06553 17.0023 6.75983C16.7228 6.45413 16.744 5.97974 17.0497 5.70024L19.2718 3.66865C19.5775 3.38915 20.0518 3.41039 20.3314 3.71609ZM12 7.75C9.65279 7.75 7.75 9.65279 7.75 12C7.75 14.3472 9.65279 16.25 12 16.25C14.3472 16.25 16.25 14.3472 16.25 12C16.25 9.65279 14.3472 7.75 12 7.75ZM6.25 12C6.25 8.82436 8.82436 6.25 12 6.25C15.1756 6.25 17.75 8.82436 17.75 12C17.75 15.1756 15.1756 17.75 12 17.75C8.82436 17.75 6.25 15.1756 6.25 12ZM1.25 12C1.25 11.5858 1.58579 11.25 2 11.25H4C4.41421 11.25 4.75 11.5858 4.75 12C4.75 12.4142 4.41421 12.75 4 12.75H2C1.58579 12.75 1.25 12.4142 1.25 12ZM19.25 12C19.25 11.5858 19.5858 11.25 20 11.25H22C22.4142 11.25 22.75 11.5858 22.75 12C22.75 12.4142 22.4142 12.75 22 12.75H20C19.5858 12.75 19.25 12.4142 19.25 12ZM17.0255 17.0252C17.3184 16.7323 17.7933 16.7323 18.0862 17.0252L20.3082 19.2475C20.6011 19.5404 20.601 20.0153 20.3081 20.3082C20.0152 20.6011 19.5403 20.601 19.2475 20.3081L17.0255 18.0858C16.7326 17.7929 16.7326 17.3181 17.0255 17.0252ZM6.97467 17.0253C7.26756 17.3182 7.26756 17.7931 6.97467 18.086L4.75244 20.3082C4.45955 20.6011 3.98468 20.6011 3.69178 20.3082C3.39889 20.0153 3.39889 19.5404 3.69178 19.2476L5.91401 17.0253C6.2069 16.7324 6.68177 16.7324 6.97467 17.0253ZM12 19.25C12.4142 19.25 12.75 19.5858 12.75 20V22C12.75 22.4142 12.4142 22.75 12 22.75C11.5858 22.75 11.25 22.4142 11.25 22V20C11.25 19.5858 11.5858 19.25 12 19.25Z" fill="currentColor"/>
</svg>
                </span>
              )}
            </button>
            {/* Settings */}
            <button
              onClick={() => handle_settings()}
              className=" py-2 flex items-center justify-center"
            >
              <svg width="18px" height="18px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fillRule="evenodd" clipRule="evenodd" d="M14.2788 2.15224C13.9085 2 13.439 2 12.5 2C11.561 2 11.0915 2 10.7212 2.15224C10.2274 2.35523 9.83509 2.74458 9.63056 3.23463C9.53719 3.45834 9.50065 3.7185 9.48635 4.09799C9.46534 4.65568 9.17716 5.17189 8.69017 5.45093C8.20318 5.72996 7.60864 5.71954 7.11149 5.45876C6.77318 5.2813 6.52789 5.18262 6.28599 5.15102C5.75609 5.08178 5.22018 5.22429 4.79616 5.5472C4.47814 5.78938 4.24339 6.1929 3.7739 6.99993C3.30441 7.80697 3.06967 8.21048 3.01735 8.60491C2.94758 9.1308 3.09118 9.66266 3.41655 10.0835C3.56506 10.2756 3.77377 10.437 4.0977 10.639C4.57391 10.936 4.88032 11.4419 4.88029 12C4.88026 12.5581 4.57386 13.0639 4.0977 13.3608C3.77372 13.5629 3.56497 13.7244 3.41645 13.9165C3.09108 14.3373 2.94749 14.8691 3.01725 15.395C3.06957 15.7894 3.30432 16.193 3.7738 17C4.24329 17.807 4.47804 18.2106 4.79606 18.4527C5.22008 18.7756 5.75599 18.9181 6.28589 18.8489C6.52778 18.8173 6.77305 18.7186 7.11133 18.5412C7.60852 18.2804 8.2031 18.27 8.69012 18.549C9.17714 18.8281 9.46533 19.3443 9.48635 19.9021C9.50065 20.2815 9.53719 20.5417 9.63056 20.7654C9.83509 21.2554 10.2274 21.6448 10.7212 21.8478C11.0915 22 11.561 22 12.5 22C13.439 22 13.9085 22 14.2788 21.8478C14.7726 21.6448 15.1649 21.2554 15.3694 20.7654C15.4628 20.5417 15.4994 20.2815 15.5137 19.902C15.5347 19.3443 15.8228 18.8281 16.3098 18.549C16.7968 18.2699 17.3914 18.2804 17.8886 18.5412C18.2269 18.7186 18.4721 18.8172 18.714 18.8488C19.2439 18.9181 19.7798 18.7756 20.2038 18.4527C20.5219 18.2105 20.7566 17.807 21.2261 16.9999C21.6956 16.1929 21.9303 15.7894 21.9827 15.395C22.0524 14.8691 21.9088 14.3372 21.5835 13.9164C21.4349 13.7243 21.2262 13.5628 20.9022 13.3608C20.4261 13.0639 20.1197 12.558 20.1197 11.9999C20.1197 11.4418 20.4261 10.9361 20.9022 10.6392C21.2263 10.4371 21.435 10.2757 21.5836 10.0835C21.9089 9.66273 22.0525 9.13087 21.9828 8.60497C21.9304 8.21055 21.6957 7.80703 21.2262 7C20.7567 6.19297 20.522 5.78945 20.2039 5.54727C19.7799 5.22436 19.244 5.08185 18.7141 5.15109C18.4722 5.18269 18.2269 5.28136 17.8887 5.4588C17.3915 5.71959 16.7969 5.73002 16.3099 5.45096C15.8229 5.17191 15.5347 4.65566 15.5136 4.09794C15.4993 3.71848 15.4628 3.45833 15.3694 3.23463C15.1649 2.74458 14.7726 2.35523 14.2788 2.15224ZM12.5 15C14.1695 15 15.5228 13.6569 15.5228 12C15.5228 10.3431 14.1695 9 12.5 9C10.8305 9 9.47716 10.3431 9.47716 12C9.47716 13.6569 10.8305 15 12.5 15Z" fill="currentColor"/>
</svg>
            </button>
            {/* Account */}
            <div className="flex items-center justify-center">
              {savedImage ? (
                <div className=" w-6 h-6 rounded-full">
                  <img src={savedImage} alt="avatar" />
                </div>
              ) : (
                <span className="py-2  flex items-center justify-center">
                  <svg width="20px" height="20px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="24" height="24" fill="none"/>
<path fillRule="evenodd" clipRule="evenodd" d="M6 8C6 4.68629 8.68629 2 12 2C15.3137 2 18 4.68629 18 8C18 11.3137 15.3137 14 12 14C8.68629 14 6 11.3137 6 8Z" fill="currentColor"/>
<path fillRule="evenodd" clipRule="evenodd" d="M5.43094 16.9025C7.05587 16.2213 9.2233 16 12 16C14.771 16 16.9351 16.2204 18.5586 16.8981C20.3012 17.6255 21.3708 18.8613 21.941 20.6587C22.1528 21.3267 21.6518 22 20.9592 22H3.03459C2.34482 22 1.84679 21.3297 2.0569 20.6654C2.62537 18.8681 3.69119 17.6318 5.43094 16.9025Z" fill="currentColor"/>
</svg>
                </span>
              )}
            </div>
          </div>
        </div>
      </nav>
      {/* Login and Register Menu ************* */}
      {login && (
        <div
          onClick={() => setLogin(false)}
          className=" bg-[rgb(119,119,119,.5)] fixed top-0 bottom-0 right-0 left-0 w-full z-50 flex items-center justify-center "
        >
          <div
            className="w-[90%] sm:w-[60%] lg:w-[30%] "
            onClick={(e) => e.stopPropagation()}
          >
                        <Suspense fallback={<Loader />}>
            <Login />
            </Suspense>
          </div>
        </div>
      )}
      {register && (
        <div
          onClick={() => setRegister(false)}
          className=" bg-[rgb(119,119,119,.5)] fixed top-0 bottom-0 right-0 left-0 w-full z-50 flex items-center justify-center "
        >
          <div
            className="w-[85%] sm:w-[50%] lg:w-[25%] "
            onClick={(e) => e.stopPropagation()}
          >
                        <Suspense fallback={<Loader />}>
            <Register />
            </Suspense>
          </div>
        </div>
      )}
    </div>
  );
}

export default Sidebar;
